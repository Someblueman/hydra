name: CI

on:
  push:
    branches: 
      - main
      - develop
      - 'feature/**'
      - 'fix/**'
      - 'hotfix/**'
      - 'release/**'
  pull_request:
    branches: [ main, develop, 'release/**' ]

jobs:
  lint:
    name: Lint POSIX Compliance
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y shellcheck dash
    
    - name: Run ShellCheck
      run: make lint
    
    - name: Validate with dash
      run: |
        for script in bin/hydra lib/*.sh; do
          echo "Validating $script with dash..."
          dash -n "$script"
        done

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install test dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git tmux dash
    
    - name: Run tests
      run: make test
    
    - name: Test with dash
      run: |
        echo "Running tests with dash as sh..."
        sudo ln -sf /bin/dash /bin/sh
        make test

  compatibility:
    name: Shell Compatibility
    runs-on: ${{ matrix.os }}
    needs: lint
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        shell: [sh, dash, bash]
        exclude:
          # dash is not available on macOS by default
          - os: macos-latest
            shell: dash
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dash (Ubuntu)
      if: matrix.os == 'ubuntu-latest' && matrix.shell == 'dash'
      run: sudo apt-get install -y dash
    
    - name: Test spawn command
      run: |
        export SHELL=${{ matrix.shell }}
        $SHELL -c 'bin/hydra --help'
    
    - name: Check syntax with shell
      run: |
        for script in bin/hydra lib/*.sh; do
          echo "Checking $script with ${{ matrix.shell }}..."
          ${{ matrix.shell }} -n "$script"
        done